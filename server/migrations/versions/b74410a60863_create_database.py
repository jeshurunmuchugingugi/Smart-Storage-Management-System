"""create database

Revision ID: b74410a60863
Revises: 
Create Date: 2025-10-23 14:19:37.041903

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b74410a60863'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('admin_id')
    )
    op.create_table('feature',
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('feature_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('storageunit',
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('unit_number', sa.String(length=20), nullable=False),
    sa.Column('site', sa.String(length=50), nullable=False),
    sa.Column('monthly_rate', sa.Numeric(precision=8, scale=2), nullable=False),
    sa.Column('status', sa.Enum('available', 'booked', name='unit_status'), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('unit_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('booking',
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'active', 'completed', 'cancelled', name='booking_status'), nullable=False),
    sa.Column('total_cost', sa.Numeric(precision=8, scale=2), nullable=False),
    sa.Column('booking_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['storageunit.unit_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('booking_id')
    )
    op.create_table('unit_feature_link',
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['feature.feature_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['storageunit.unit_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('unit_id', 'feature_id')
    )
    op.create_table('payment',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_method', sa.String(length=30), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'completed', 'failed', name='payment_status'), nullable=True),
    sa.Column('transaction_id', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_table('transportationrequest',
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('pickup_address', sa.String(length=250), nullable=False),
    sa.Column('pickup_date', sa.Date(), nullable=False),
    sa.Column('pickup_time', sa.Time(), nullable=False),
    sa.Column('distance', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('status', sa.Enum('pending', 'scheduled', 'completed', 'cancelled', name='transport_status'), nullable=True),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('request_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transportationrequest')
    op.drop_table('payment')
    op.drop_table('unit_feature_link')
    op.drop_table('booking')
    op.drop_table('user')
    op.drop_table('storageunit')
    op.drop_table('feature')
    op.drop_table('admin')
    # ### end Alembic commands ###
